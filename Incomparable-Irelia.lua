--[[


 -- Incomparable Irelia
 -- 更多分享Q群:384232347
 -- by B1nk


--]]

assert(load(Base64Decode(""), nil, "bt", _ENV))()
